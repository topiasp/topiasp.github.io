{"version":3,"sources":["components/Map.js","components/Stop.js","services/timetables.js","reducers/timetableReducer.js","utils/UnixTime.js","components/Departures.js","services/stops.js","components/Search.js","utils/LocalStorage.js","reducers/followedPatternsReducer.js","components/ChooseBus.js","App.js","store.js","index.js"],"names":["Map","SETUP","mapDiv","elementsToMap","center","MAPCONFIG","CENTER","zoom","ZOOM","ref","doubleClickZoom","className","TileLayer","url","MAPLAYER","URL","map","elem","Polygon","key","uuid","color","weight","positions","Popup","popup","Stop","createRef","CRS","BUFFERSIZE","Container","getTimetables","params","a","console","log","stops","t","stopId","join","query","fetch","body","JSON","stringify","headers","method","mode","redirect","referrer","timetables","dispatch","getTimetablesService","data","json","parsedStream","manipulatedData","flatMap","stop","stoptimesWithoutPatterns","departure","stopname","name","gtfsId","type","unixTimeToHoursAndMinutes","fullMinutes","hours","connect","state","followedPatterns","useEffect","length","Card","Group","filter","find","followed","patternId","trip","pattern","code","header","route","shortName","realTime","realtimeArrival","scheduled","scheduledArrival","uuidv4","fluid","Content","style","fontSize","Icon","float","marginLeft","searchStops","searchString","extractInfoForDisplay","bussesAndDirections","patterns","pat","headsign","title","Search","setSelectedStop","useState","results","setResults","value","setValue","minCharacters","noResultsMessage","onResultSelect","e","result","onSearchChange","_","debounce","then","res","s","leading","size","localStorageId","getLocalStoragePatterns","storageContent","localStorage","getItem","undefined","split","addToLocalStoragePatterns","patternid","setItem","concat","initialstate","addPattern","selectedStop","history","useHistory","Header","as","List","divided","verticalAlign","icon","toLowerCase","p","Item","floated","Button","positive","onClick","marginRight","push","setPatterns","localStoragePatterns","exact","path","render","to","reducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f94f4020.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { Map as LeafletMap, TileLayer, Popup, Polygon }  from 'react-leaflet'\r\nimport uuid from 'uuid'\r\n\r\nconst Map = ({ SETUP, mapDiv, elementsToMap }) => {\r\n\r\n\r\n    return(\r\n        <LeafletMap\r\n          center={SETUP.MAPCONFIG.CENTER}\r\n          zoom={SETUP.MAPCONFIG.ZOOM}\r\n          ref={mapDiv}\r\n          doubleClickZoom={true}\r\n          className=\"map__reactleaflet\">\r\n\r\n        <TileLayer\r\n          url={ SETUP.MAPLAYER.URL }\r\n        />\r\n        \r\n         {\r\n              elementsToMap.map(elem =>\r\n                <Polygon\r\n                    key={uuid()}\r\n                    color={elem.color}\r\n                    weight={elem.weight}\r\n                    positions={elem.positions}>\r\n                  <Popup>\r\n                    {elem.popup()}\r\n                  </Popup>\r\n                </Polygon>\r\n              )\r\n              \r\n          }          \r\n      </LeafletMap>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default Map\r\n","import React, { createRef } from 'react'\r\n\r\nimport Map from '../components/Map'\r\n\r\nimport { Container } from 'semantic-ui-react'\r\n\r\nconst Stop = () => {\r\n\r\n\r\n    \r\n\r\n    const mapDiv = createRef()\r\n\r\n    const MAPCONFIG = {\r\n        CENTER: [65.029219, 25.465416],\r\n        ZOOM: 16,\r\n        CRS: 4326,\r\n        BUFFERSIZE: 2000\r\n    }\r\n\r\n\r\n    const MAPLAYER = {\r\n        //URL: \"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\",    \r\n        \r\n        //\r\n        //URL: \"https://cdn.digitransit.fi/map/v1/hsl-stop-map/{z}/{x}/{y}.pbf\"\r\n        URL: \"https://cdn.digitransit.fi/map/v1/hsl-map-256/{z}/{x}/{y}.png\"\r\n    }\r\n\r\n\r\n    const SETUP = {\r\n        MAPCONFIG,\r\n        MAPLAYER\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            Nonsense\r\n            <Map\r\n            elementsToMap={[]}\r\n            SETUP={SETUP}\r\n            mapDiv={mapDiv}\r\n        />\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Stop\r\n\r\n","\r\n\r\n\r\nexport const getTimetables = async (params) => {\r\n\r\n    console.log('params', params)\r\n    //var con = '[' + '\"'+ params[0].stop.key +'\"' +']' ||'[\"HSL:1293123\"]' \r\n\r\n    const stops = ['[\"',params.map(t => t.stopId).join('\",\"'),'\"]'].join('')\r\n   \r\n    // Form query\r\n    let query = '{ stops(ids: '+stops+')'\r\n    \r\n    \r\n\r\n    query += '{   name gtfsId  stoptimesWithoutPatterns(numberOfDepartures:10) {'\r\n\r\n    let paramsForApi = [\r\n    'scheduledArrival',\r\n    'realtimeArrival',\r\n    'arrivalDelay',\r\n    'scheduledDeparture',\r\n    'realtimeDeparture',\r\n    'departureDelay',\r\n    'realtime',\r\n    'realtimeState',\r\n    'serviceDay',\r\n    'headsign']\r\n\r\n    query += paramsForApi.join(' ');\r\n    // TODO: terrible\r\n    query += ' trip {     gtfsId        tripShortName        serviceId  pattern { code }      route {          id          shortName          gtfsId        }              }'\r\n    query += '   }       }      }';\r\n    \r\n\r\n    // Post it\r\n\r\n    const timetables = await fetch('https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql', {\r\n            body: JSON.stringify({ query }),\r\n            headers: {\r\n            'user-agent': 'Mozilla/4.0 MDN Example',\r\n            'content-type': 'application/json'\r\n            },\r\n            method: 'POST', \r\n            mode: 'cors', \r\n            redirect: 'follow', \r\n            referrer: 'no-referrer', \r\n        })\r\n\r\n    return timetables//.then(res => res.json)\r\n\r\n\r\n} \r\n\r\n\r\n\r\n","import { getTimetables as getTimetablesService } from '../services/timetables'\r\n\r\n\r\nconst initialstate = null\r\n\r\n\r\n\r\n\r\nexport const timetableReducer = (state = initialstate, action) => {\r\n\r\n  switch (action.type) {\r\n  case 'SET_TIMETABLES':\r\n    return action.data\r\n\r\n  case 'INIT':\r\n    return initialstate\r\n  \r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initData = () => {\r\n  return {\r\n    type: 'INIT',\r\n    data: undefined\r\n  }\r\n}\r\n\r\n\r\nexport const getTimetables = (params) => {\r\n\r\n   \r\n\r\n    \r\n    return async dispatch => {\r\n      \r\n      const data =      await getTimetablesService(params)  \r\n\r\n      const parsedStream = await data.json()\r\n      const manipulatedData = parsedStream.data.stops.flatMap(stop =>  stop.stoptimesWithoutPatterns.map(departure =>   ({ stopname: stop.name, stopId: stop.gtfsId, ...departure })        ) )\r\n      \r\n  \r\n      return dispatch({\r\n        type: 'SET_TIMETABLES',\r\n        data: manipulatedData\r\n      })\r\n     \r\n    }\r\n}","const unixTimeToHoursAndMinutes = (t) => {\r\n\r\n    // t = seconds from midnight\r\n\r\n    let fullMinutes = (t - (t % 60)) / 60\r\n    let hours =  (fullMinutes - (fullMinutes % 60)) / 60\r\n    fullMinutes = ((fullMinutes % 60) )\r\n    \r\n\r\n    if (hours<10) {\r\n        hours = '0'+hours\r\n    }\r\n    if (fullMinutes<10) {\r\n        fullMinutes = '0'+fullMinutes\r\n    }\r\n\r\n    return hours +\":\"+fullMinutes\r\n}\r\n\r\nexport default  unixTimeToHoursAndMinutes","\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Container, Card, Icon } from 'semantic-ui-react'\r\n\r\nimport  uuidv4  from 'uuid/v4'\r\nimport unixTimeToHoursAndMinutes from '../utils/UnixTime'\r\nimport { getTimetables } from '../reducers/timetableReducer'\r\n\r\n\r\nconst Departures = ({ followedPatterns, getTimetables, timetables }) => {\r\n\r\n  \r\n    useEffect(() => {\r\n\r\n        if (followedPatterns && followedPatterns.length>0 ) {\r\n            getTimetables( followedPatterns )\r\n        }\r\n            \r\n\r\n    },[followedPatterns])\r\n    \r\n    \r\n    if (!timetables) {\r\n        return('')\r\n    }\r\n    const isDepartureFollowed = departure =>       followedPatterns.find(followed => followed.patternId === departure.trip.pattern.code)\r\n    \r\n\r\n    return(\r\n        <Container>\r\n\r\n            <Card.Group>\r\n            {\r\n                timetables.filter(isDepartureFollowed).map(departure => {\r\n                    let header = departure.trip.route.shortName\r\n\r\n                    let realTime = unixTimeToHoursAndMinutes( departure.realtimeArrival )\r\n                    let scheduled = unixTimeToHoursAndMinutes( departure.scheduledArrival) \r\n                    \r\n                    const headerStyle = { fontSize: '120%' }\r\n\r\n\r\n                    return(\r\n                        <Card\r\n                            key = { uuidv4() }\r\n                            fluid\r\n                        >\r\n                            <Card.Content style={headerStyle}>\r\n                                <span style={{color: '#006600', fontSize: '150%'}}>{ header } </span>\r\n                                <Icon name=\"beer\" style={{float: 'right', fontSize: '150%', color: '#eaea4e' }}></Icon>\r\n                            </Card.Content>\r\n                            <Card.Content>\r\n                            <span><b> { realTime } </b></span>\r\n                            <span style={{marginLeft:'5%'}}>{ scheduled }</span>\r\n                            \r\n                            </Card.Content>\r\n                            \r\n                            \r\n                        </Card>\r\n                    )\r\n\r\n                })\r\n            }\r\n            </Card.Group>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>  ({ ...state })\r\nexport default connect(mapStateToProps, {   getTimetables })(Departures)","\r\n\r\n\r\nconst searchStops = async (searchString) => {\r\n\r\n    \r\n    //const searchString = 'hertto'//params.searchString\r\n   \r\n    // Form query\r\n    //let query = '{ stops(ids: '+params.searchString+')'\r\n    \r\n    \r\n\r\n    //query += '{   name gtfsId  stoptimesWithoutPatterns(numberOfDepartures:10) {'\r\n\r\n   \r\n\r\n    const query = `{\r\n      stops(name: \"${searchString}\") {\r\n        gtfsId\r\n        name\r\n        code\r\n        lat\r\n        lon\r\n        patterns {\r\n          code\r\n          directionId\r\n          headsign\r\n          route {\r\n            gtfsId\r\n            shortName\r\n            longName\r\n            mode\r\n          }\r\n        }\r\n      }\r\n    }\r\n    `\r\n    // Post it\r\n\r\n    const stops = await fetch('https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql', {\r\n            body: JSON.stringify({ query }),\r\n            headers: {\r\n            'user-agent': 'Mozilla/4.0 MDN Example',\r\n            'content-type': 'application/json'\r\n            },\r\n            method: 'POST', \r\n            mode: 'cors', \r\n            redirect: 'follow', \r\n            referrer: 'no-referrer', \r\n        })\r\n\r\n    return stops//.then(res => res.json)\r\n\r\n\r\n} \r\n\r\n\r\n\r\nexport default searchStops ","import React, { useState, useEffect } from 'react'\r\nimport _ from 'lodash'\r\nimport searchStops from '../services/stops'\r\nimport { Search as SemanticSearch, Container } from 'semantic-ui-react'\r\n\r\nconst Search = ({ setSelectedStop }) => {\r\n\r\n    const [results,setResults] = useState([])\r\n    const [value,setValue] = useState('')\r\n\r\n    \r\n\r\n    const handleSearchChange = (e, { value }) => {\r\n        \r\n\r\n        setValue(value)\r\n\r\n        searchStops(value).then(res => res.json()).then(res => {\r\n            console.log('res',res)\r\n            setResults(res.data.stops.map(s => extractInfoForDisplay(s)  ))\r\n        })\r\n \r\n    }\r\n\r\n    const handleResultSelect = (e, { result }) => {\r\n         setSelectedStop(result)\r\n         console.log('selected', result)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        \r\n        <Container>\r\n            <SemanticSearch\r\n                minCharacters={4}\r\n                noResultsMessage='Pysäkkejä ei löydy'\r\n                onResultSelect={ handleResultSelect}\r\n                onSearchChange={ _.debounce( handleSearchChange , 500, {\r\n                    leading: true,\r\n                })}\r\n                results={results}\r\n                value={value}\r\n                size='big'\r\n                \r\n            />\r\n        </Container>   \r\n        \r\n    )\r\n}\r\n\r\n\r\nvar extractInfoForDisplay = stop => {\r\n\r\n    const bussesAndDirections = stop.patterns.map(pat =>  `(${ pat.headsign } ${pat.route.shortName})` )\r\n\r\n    return {\r\n        title: stop.name + ' ' + bussesAndDirections\r\n        ,key: stop.gtfsId\r\n        ,name: stop.name\r\n        ,patterns: stop.patterns\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Search","const localStorageId = 'bustop-followed-patterns'\r\n\r\nexport const getLocalStoragePatterns = () => {\r\n    const storageContent = localStorage.getItem(localStorageId)\r\n\r\n    const patterns = storageContent === undefined | storageContent === null ? [] : storageContent.split(',')\r\n\r\n    return patterns.map(pattern => ( { stopId: pattern.split('|')[0], patternId: pattern.split('|')[1] } ))\r\n\r\n}\r\n\r\n\r\nexport const includedLocalStoragePatterns = patternid => {\r\n    const storageContent = localStorage.getItem(localStorageId)\r\n\r\n    return storageContent === undefined | storageContent === null ? false : ( storageContent.split(',').find(c => c === patternid) !== undefined )\r\n\r\n}\r\n\r\nexport const addToLocalStoragePatterns = patternid => {\r\n    const storageContent = localStorage.getItem(localStorageId)\r\n    if ( storageContent === undefined | storageContent === null ) {\r\n        localStorage.setItem(localStorageId,patternid)\r\n    } else {\r\n        localStorage.setItem(localStorageId,  storageContent.split(',').concat(patternid))\r\n    } \r\n}\r\n\r\n\r\nexport const removeFromLocalStoragePatterns = patternid => {\r\n    const storageContent = localStorage.getItem(localStorageId)\r\n    if ( storageContent === undefined | storageContent === null ) {\r\n        return undefined\r\n    } else {\r\n        localStorage.setItem(localStorageId,  storageContent.split(',').filter( c => c !== patternid  )  )\r\n    } \r\n}\r\n\r\nexport const toggleLocalStoragePatterns = patternid => {\r\n\r\n    if ( includedLocalStoragePatterns(patternid) ) {\r\n        removeFromLocalStoragePatterns(patternid)\r\n    } else {\r\n        addToLocalStoragePatterns(patternid)\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { addToLocalStoragePatterns } from '../utils/LocalStorage'\r\n\r\nconst initialstate = []\r\n\r\n\r\n\r\nexport const followedPatternsReducer = (state = initialstate, action) => {\r\n\r\n  switch (action.type) {\r\n  case 'ADD_PATTERN':\r\n    return state.concat(action.data)\r\n  case 'SET_PATTERNS':\r\n    return action.data\r\n\r\n  case 'INIT':\r\n    return initialstate\r\n    \r\n  \r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const setPatterns = patterns => {\r\n\r\n  return {\r\n    type: 'SET_PATTERNS',\r\n    data: patterns\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const addPattern = pattern => {\r\n\r\n\r\n  // Handle local storage\r\n  addToLocalStoragePatterns(  pattern.stop.key + '|' + pattern.pattern.code )\r\n\r\n  return {\r\n    type: 'ADD_PATTERN',\r\n    data: pattern\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport Search from './Search'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { List, Button, Container, Icon, Header } from 'semantic-ui-react'\r\nimport uuid from 'uuid'\r\nimport { addPattern } from '../reducers/followedPatternsReducer'\r\n\r\n\r\nimport {\r\n    useHistory \r\n  } from 'react-router-dom'\r\n\r\n\r\nconst ChooseBus = ({ addPattern, followedPatterns }) => {\r\n\r\n    const [selectedStop,setSelectedStop] = useState(undefined)\r\n\r\n    let history = useHistory();\r\n\r\n    function handleReady() {\r\n      history.push(\"/\");\r\n    }\r\n    \r\n\r\n    return(\r\n        <Container>\r\n            {\r\n                selectedStop ?\r\n                    <div>\r\n                        <Header as='h2'>{ selectedStop.name }</Header>\r\n\r\n                        <List divided verticalAlign='middle'>\r\n                                {\r\n                                    selectedStop.patterns.map(pattern => {\r\n\r\n                                        const icon = pattern.route.mode === 'RAIL' ? 'train' : pattern.route.mode.toLowerCase()\r\n\r\n                                        // Dont add if already followed\r\n                                        if (followedPatterns.find(p => p.pattern.code === pattern.code)) {\r\n                                            return('')\r\n                                        }\r\n\r\n                                        return(\r\n                                            <List.Item key={ uuid() }>\r\n                                                <List.Content floated='right'>\r\n                                                    <Button\r\n                                                        positive\r\n                                                        onClick={ () => addPattern({ stop: selectedStop, pattern }) }\r\n                                                    >\r\n                                                        <Icon name={icon} style={{ fontSize: '150%', color: 'white' }}></Icon>\r\n                                                        Seuraa\r\n                                                    </Button>\r\n                                                </List.Content>\r\n                                                <List.Content>\r\n                                                    <span style={{ marginRight: '2%' }}>Suunta: { pattern.headsign }</span>\r\n                                                    <span style={{ fontSize: '150%'}}>{pattern.route.shortName}</span>\r\n                                                    \r\n                                                </List.Content>\r\n                                            </List.Item>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    :\r\n                    <Search setSelectedStop={setSelectedStop} />\r\n            }\r\n            <Button positive onClick={ handleReady } >Valmista</Button>\r\n            \r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) =>  ({ ...state })\r\nexport default connect(mapStateToProps, {   addPattern })(ChooseBus)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect\n} from 'react-router-dom'\n\nimport Stop from './components/Stop'\n\n\n\nimport { getTimetables }  from './reducers/timetableReducer'\nimport Departures     from './components/Departures'\nimport ChooseBus from './components/ChooseBus'\nimport { getLocalStoragePatterns } from './utils/LocalStorage'\nimport { setPatterns } from './reducers/followedPatternsReducer'\n\nconst App = ({ setPatterns }) => {\n\n\n  useEffect(() => {\n    // Import from local storage\n    setPatterns(getLocalStoragePatterns().filter(s => s.patternId))  \n\n  },[])\n\n\n  const localStoragePatterns = getLocalStoragePatterns()\n\n  return(\n\n    <Router>\n      <Route exact path=\"/\" render={() => \n       \n       localStoragePatterns.length > 0 ? \n          <Departures/>\n          :\n          <Redirect to=\"/choose\" />\n      \n      } />\n      <Route exact path=\"/map\" render={() => <Stop /> }/>\n      <Route exact path=\"/choose\" render={() => <ChooseBus /> }/>\n    </Router>\n  )\n\n}\n\n\n\n\nconst mapStateToProps = (state) =>  ({ ...state })\nexport default connect(mapStateToProps, {   getTimetables, setPatterns })(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { timetableReducer } from './reducers/timetableReducer'\r\nimport { followedPatternsReducer } from './reducers/followedPatternsReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n  timetables: timetableReducer,\r\n  followedPatterns: followedPatternsReducer\r\n})\r\n\r\nconst store = createStore(reducer,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>, document.getElementById('root'))\n"],"sourceRoot":""}