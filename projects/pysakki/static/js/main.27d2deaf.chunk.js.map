{"version":3,"sources":["services/timetables.js","reducers/timetableReducer.js","utils/UnixTime.js","components/Departures.js","services/stops.js","components/Search.js","utils/LocalStorage.js","reducers/followedPatternsReducer.js","components/ChooseBus.js","components/Menu.js","components/FollowedPatternList.js","App.js","store.js","index.js"],"names":["getTimetables","params","a","console","log","uniqueStopIds","reduce","t","c","includes","stopId","concat","stops","join","query","fetch","body","JSON","stringify","headers","method","mode","redirect","referrer","timetables","dispatch","getTimetablesService","data","json","parsedStream","manipulatedData","flatMap","stop","stoptimesWithoutPatterns","map","departure","stopname","name","gtfsId","sort","tripA","tripB","realtimeArrival","type","unixTimeToHoursAndMinutes","fullMinutes","hours","connect","state","followedPatterns","useEffect","length","Container","style","marginTop","Card","Group","filter","find","followed","patternId","trip","pattern","code","header","route","shortName","realTime","scheduled","scheduledArrival","key","uuidv4","fluid","Content","fontSize","color","Icon","float","marginLeft","searchStops","searchString","extractInfoForDisplay","bussesAndDirections","patterns","pat","headsign","title","Search","setSelectedStop","placeholder","useState","results","setResults","value","setValue","minCharacters","noResultsMessage","onResultSelect","e","result","onSearchChange","_","debounce","then","res","s","leading","size","localStorageId","addToLocalStoragePatterns","patternid","storageContent","localStorage","getItem","undefined","setItem","split","removeFromLocalStoragePatterns","initialstate","idFromPattern","patternToString","idPatternToString","addPattern","selectedStop","Header","as","List","divided","verticalAlign","icon","toLowerCase","p","Item","uuid","floated","Button","positive","onClick","marginRight","Menu","activeItem","pages","onChoose","attached","tabular","page","active","componentName","removePattern","negative","setPatterns","setActiveItem","getLocalStoragePatterns","Grid","columns","Column","width","reducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27d2deaf.chunk.js","sourcesContent":["\r\n\r\n\r\nexport const getTimetables = async (params) => {\r\n\r\n    console.log('params', params)\r\n\r\n    const uniqueStopIds = params.reduce((t,c) => t.includes(c.stopId) ? t : t.concat(c.stopId)  , [])\r\n\r\n\r\n    const stops = ['[\"', uniqueStopIds.join('\",\"'),'\"]'].join('')\r\n   \r\n    // Form query\r\n    let query = '{ stops(ids: '+stops+')'\r\n    \r\n    \r\n\r\n    query += '{   name gtfsId  stoptimesWithoutPatterns(numberOfDepartures:30) {'\r\n\r\n    let paramsForApi = [\r\n    'scheduledArrival',\r\n    'realtimeArrival',\r\n    'arrivalDelay',\r\n    'scheduledDeparture',\r\n    'realtimeDeparture',\r\n    'departureDelay',\r\n    'realtime',\r\n    'realtimeState',\r\n    'serviceDay',\r\n    'headsign']\r\n\r\n    query += paramsForApi.join(' ');\r\n    // TODO: terrible\r\n    query += ' trip {     gtfsId        tripShortName        serviceId  pattern { code }      route {          id          shortName          gtfsId        }              }'\r\n    query += '   }       }      }';\r\n    \r\n\r\n    // Post it\r\n\r\n    const timetables = await fetch('https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql', {\r\n            body: JSON.stringify({ query }),\r\n            headers: {\r\n            'user-agent': 'Mozilla/4.0 MDN Example',\r\n            'content-type': 'application/json'\r\n            },\r\n            method: 'POST', \r\n            mode: 'cors', \r\n            redirect: 'follow', \r\n            referrer: 'no-referrer', \r\n        })\r\n\r\n    return timetables//.then(res => res.json)\r\n\r\n\r\n} \r\n\r\n\r\n\r\n","import { getTimetables as getTimetablesService } from '../services/timetables'\r\n\r\n\r\nconst initialstate = null\r\n\r\n\r\n\r\n\r\nexport const timetableReducer = (state = initialstate, action) => {\r\n\r\n  switch (action.type) {\r\n  case 'SET_TIMETABLES':\r\n    return action.data\r\n\r\n  case 'INIT':\r\n    return initialstate\r\n  \r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initData = () => {\r\n  return {\r\n    type: 'INIT',\r\n    data: undefined\r\n  }\r\n}\r\n\r\n\r\nexport const getTimetables = (params) => {\r\n\r\n   \r\n\r\n    \r\n    return async dispatch => {\r\n      \r\n      const data =      await getTimetablesService(params)  \r\n\r\n      const parsedStream = await data.json()\r\n      \r\n      console.log('parsedStream',parsedStream)\r\n      const manipulatedData = parsedStream.data.stops.flatMap(stop =>  stop.stoptimesWithoutPatterns.map(departure =>   ({ stopname: stop.name, stopId: stop.gtfsId, ...departure })        ) )\r\n      \r\n      manipulatedData.sort((tripA,tripB) => tripA.realtimeArrival - tripB.realtimeArrival)\r\n      //console.log('resp', manipulatedData)\r\n  \r\n      return dispatch({\r\n        type: 'SET_TIMETABLES',\r\n        data: manipulatedData\r\n      })\r\n     \r\n    }\r\n}","const unixTimeToHoursAndMinutes = (t) => {\r\n\r\n    // t = seconds from midnight\r\n\r\n    let fullMinutes = (t - (t % 60)) / 60\r\n    let hours =  (fullMinutes - (fullMinutes % 60)) / 60\r\n    fullMinutes = ((fullMinutes % 60) )\r\n    \r\n\r\n    if (hours<10) {\r\n        hours = '0'+hours\r\n    }\r\n    if (fullMinutes<10) {\r\n        fullMinutes = '0'+fullMinutes\r\n    }\r\n\r\n    return hours +\":\"+fullMinutes\r\n}\r\n\r\nexport default  unixTimeToHoursAndMinutes","\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Container, Card, Icon } from 'semantic-ui-react'\r\n\r\nimport  uuidv4  from 'uuid/v4'\r\nimport unixTimeToHoursAndMinutes from '../utils/UnixTime'\r\nimport { getTimetables } from '../reducers/timetableReducer'\r\n\r\n\r\nconst Departures = ({ followedPatterns, getTimetables, timetables }) => {\r\n\r\n  \r\n    useEffect(() => {\r\n\r\n        if (followedPatterns && followedPatterns.length>0 ) {\r\n            getTimetables( followedPatterns )\r\n        }\r\n            \r\n\r\n    },[followedPatterns])\r\n\r\n    if (!followedPatterns || followedPatterns.length===0) {\r\n\r\n        return(\r\n            <div>\r\n                Ei seurattuja busseja.\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    \r\n    \r\n    if (!timetables) {\r\n        return('')\r\n    }\r\n    const isDepartureFollowed = departure =>       followedPatterns.find(followed => followed.patternId === departure.trip.pattern.code)\r\n    \r\n\r\n    return(\r\n        <Container style={ { marginTop:'5%' } }>\r\n\r\n            <Card.Group>\r\n            {\r\n                timetables.filter(isDepartureFollowed).map(departure => {\r\n                    let header = departure.trip.route.shortName\r\n\r\n                    let realTime = unixTimeToHoursAndMinutes( departure.realtimeArrival )\r\n                    let scheduled = unixTimeToHoursAndMinutes( departure.scheduledArrival) \r\n                    \r\n                    const headerStyle = { fontSize: '120%' }\r\n\r\n\r\n                    return(\r\n                        <Card\r\n                            key = { uuidv4() }\r\n                            fluid\r\n                        >\r\n                            <Card.Content style={headerStyle}>\r\n                                <span style={{color: '#006600', fontSize: '150%'}}>{ header } </span>\r\n                                <Icon name=\"beer\" style={{float: 'right', fontSize: '150%', color: '#eaea4e' }}></Icon>\r\n                            </Card.Content>\r\n                            <Card.Content>\r\n                            <span><b> { realTime } </b></span>\r\n                            <span style={{marginLeft:'5%'}}>{ scheduled }</span>\r\n                            \r\n                            </Card.Content>\r\n                            \r\n                            \r\n                        </Card>\r\n                    )\r\n\r\n                })\r\n            }\r\n            </Card.Group>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>  ({ ...state })\r\nexport default connect(mapStateToProps, {   getTimetables })(Departures)","\r\n\r\n\r\nconst searchStops = async (searchString) => {\r\n\r\n    \r\n    //const searchString = 'hertto'//params.searchString\r\n   \r\n    // Form query\r\n    //let query = '{ stops(ids: '+params.searchString+')'\r\n    \r\n    \r\n\r\n    //query += '{   name gtfsId  stoptimesWithoutPatterns(numberOfDepartures:10) {'\r\n\r\n   \r\n\r\n    const query = `{\r\n      stops(name: \"${searchString}\") {\r\n        gtfsId\r\n        name\r\n        code\r\n        lat\r\n        lon\r\n        patterns {\r\n          code\r\n          directionId\r\n          headsign\r\n          route {\r\n            gtfsId\r\n            shortName\r\n            longName\r\n            mode\r\n          }\r\n        }\r\n      }\r\n    }\r\n    `\r\n    // Post it\r\n\r\n    const stops = await fetch('https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql', {\r\n            body: JSON.stringify({ query }),\r\n            headers: {\r\n            'user-agent': 'Mozilla/4.0 MDN Example',\r\n            'content-type': 'application/json'\r\n            },\r\n            method: 'POST', \r\n            mode: 'cors', \r\n            redirect: 'follow', \r\n            referrer: 'no-referrer', \r\n        })\r\n\r\n    return stops//.then(res => res.json)\r\n\r\n\r\n} \r\n\r\n\r\n\r\nexport default searchStops ","import React, { useState, useEffect } from 'react'\r\nimport _ from 'lodash'\r\nimport searchStops from '../services/stops'\r\nimport { Search as SemanticSearch, Container } from 'semantic-ui-react'\r\n\r\nconst Search = ({ setSelectedStop, placeholder }) => {\r\n\r\n    const [results,setResults] = useState([])\r\n    const [value,setValue] = useState('')\r\n\r\n    \r\n\r\n    const handleSearchChange = (e, { value }) => {\r\n        \r\n\r\n        setValue(value)\r\n\r\n        searchStops(value).then(res => res.json()).then(res => {\r\n            console.log('res',res)\r\n            setResults(res.data.stops.map(s => extractInfoForDisplay(s)  ))\r\n        })\r\n \r\n    }\r\n\r\n    const handleResultSelect = (e, { result }) => {\r\n         setSelectedStop(result)\r\n         console.log('selected', result)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        \r\n        <Container>\r\n            <SemanticSearch\r\n                minCharacters={4}\r\n                noResultsMessage='Pysäkkejä ei löydy'\r\n                onResultSelect={ handleResultSelect}\r\n                onSearchChange={ _.debounce( handleSearchChange , 500, {\r\n                    leading: true,\r\n                })}\r\n                results={results}\r\n                value={value}\r\n                size='big'\r\n                placeholder={placeholder}\r\n                \r\n            />\r\n        </Container>   \r\n        \r\n    )\r\n}\r\n\r\n\r\nvar extractInfoForDisplay = stop => {\r\n\r\n    const bussesAndDirections = stop.patterns.map(pat =>  `(${ pat.headsign } ${pat.route.shortName})` )\r\n\r\n    return {\r\n        title: stop.name + ' ' + bussesAndDirections\r\n        ,key: stop.gtfsId\r\n        ,name: stop.name\r\n        ,patterns: stop.patterns\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Search","const localStorageId = 'bustop-followed-patterns'\r\n\r\nexport const getLocalStoragePatterns = () => {\r\n    const storageContent = localStorage.getItem(localStorageId)\r\n\r\n    const patterns = storageContent === undefined | storageContent === null ? [] : storageContent.split(',')\r\n\r\n    return patterns.map(pattern => ( { stopId: pattern.split('|')[0], patternId: pattern.split('|')[1], shortName: pattern.split('|')[2]    } ))\r\n\r\n}\r\n\r\n\r\nexport const includedLocalStoragePatterns = patternid => {\r\n    const storageContent = localStorage.getItem(localStorageId)\r\n\r\n    return storageContent === undefined | storageContent === null ? false : ( storageContent.split(',').find(c => c === patternid) !== undefined )\r\n\r\n}\r\n\r\nexport const addToLocalStoragePatterns = patternid => {\r\n    const storageContent = localStorage.getItem(localStorageId)\r\n    if ( storageContent === undefined | storageContent === null ) {\r\n        localStorage.setItem(localStorageId,patternid)\r\n    } else {\r\n        localStorage.setItem(localStorageId,  storageContent.split(',').concat(patternid))\r\n    } \r\n}\r\n\r\n\r\nexport const removeFromLocalStoragePatterns = patternid => {\r\n    const storageContent = localStorage.getItem(localStorageId)\r\n    if ( storageContent === undefined | storageContent === null ) {\r\n        return undefined\r\n    } else {\r\n        localStorage.setItem(localStorageId,  storageContent.split(',').filter( c => c !== patternid  )  )\r\n    } \r\n}\r\n\r\nexport const toggleLocalStoragePatterns = patternid => {\r\n\r\n    if ( includedLocalStoragePatterns(patternid) ) {\r\n        removeFromLocalStoragePatterns(patternid)\r\n    } else {\r\n        addToLocalStoragePatterns(patternid)\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { addToLocalStoragePatterns, removeFromLocalStoragePatterns } from '../utils/LocalStorage'\r\n\r\nconst initialstate = []\r\n\r\n\r\n\r\nexport const followedPatternsReducer = (state = initialstate, action) => {\r\n\r\n  switch (action.type) {\r\n  case 'ADD_PATTERN':\r\n    return state.concat(action.data)\r\n  case 'SET_PATTERNS':\r\n    return action.data\r\n\r\n\r\n  case 'REMOVE_PATTERN':\r\n    return state.filter( pat => !(pat.stopId === action.data.stopId & pat.patternId === action.data.patternId  ))\r\n\r\n  case 'INIT':\r\n    return initialstate\r\n    \r\n  \r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const setPatterns = patterns => {\r\n\r\n  return {\r\n    type: 'SET_PATTERNS',\r\n    data: patterns\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const addPattern = pattern => {\r\n\r\n  const patternId = idFromPattern(pattern)\r\n\r\n  // Handle local storage\r\n  addToLocalStoragePatterns( patternToString(pattern)  )\r\n\r\n  return {\r\n    type: 'ADD_PATTERN',\r\n    data: patternId\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const removePattern = pattern => {\r\n\r\n  //const patternId = idFromPattern(pattern)\r\n\r\n  console.log('remove', pattern)\r\n\r\n  // Handle local storage\r\n  removeFromLocalStoragePatterns( idPatternToString(pattern)  )\r\n\r\n  return {\r\n    type: 'REMOVE_PATTERN',\r\n    data: pattern\r\n  }\r\n}\r\n\r\n\r\nexport const addPatterns = patterns => {\r\n\r\n\r\n  // Handle local storage\r\n  patterns.forEach(pattern =>  addToLocalStoragePatterns(  patternToString(pattern) ) )\r\n\r\n  return {\r\n    type: 'SET_PATTERNS',\r\n    data: patterns.map(idFromPattern)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst idFromPattern = pattern =>  ({ stopId: pattern.stop.key, patternId: pattern.pattern.code, shortName: pattern.pattern.route.shortName })\r\nconst patternToString = pattern => pattern.stop.key + '|' + pattern.pattern.code + '|' + pattern.pattern.route.shortName\r\n\r\n// For situations where id from is already\r\nconst idPatternToString = pattern => pattern.stopId + '|' + pattern.patternId + '|' + pattern.shortName","import React, { useState } from 'react'\r\nimport Search from './Search'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { List, Button,  Icon, Header, Grid } from 'semantic-ui-react'\r\nimport uuid from 'uuid'\r\nimport {  addPattern } from '../reducers/followedPatternsReducer'\r\n\r\n\r\nconst ChooseBus = ({  addPattern, followedPatterns }) => {\r\n\r\n    const [selectedStop,setSelectedStop] = useState(undefined)\r\n    \r\n\r\n\r\n        \r\n    const patternToListItem = pattern =>     {\r\n\r\n        const icon = pattern.route.mode === 'RAIL' ? 'train' : pattern.route.mode.toLowerCase()\r\n\r\n        // Dont add if already followed\r\n        if (\r\n            followedPatterns.find(p => p.patternId === pattern.code)\r\n            ) {\r\n            return('')\r\n        }\r\n\r\n        return(\r\n            <List.Item key={ uuid() }>\r\n                <List.Content floated='right'>\r\n                    <Button\r\n                        positive\r\n                        onClick={ () => addPattern( { stop: selectedStop, pattern })  }\r\n                    >\r\n                        <Icon name={icon} style={{ fontSize: '130%', color: 'white' }}></Icon>\r\n                        <Icon name={\"plus\"} style={{ fontSize: '130%', color: 'white' }}></Icon>\r\n                    </Button>\r\n                </List.Content>\r\n                <List.Content>\r\n\r\n                    <span style={{ fontSize: '130%'}}>{pattern.route.shortName}</span>\r\n                    <div style={{ marginRight: '2%' }}>{ pattern.headsign }</div>                    \r\n                </List.Content>\r\n            </List.Item>\r\n        )\r\n    }\r\n\r\n    console.log('selectedStop', selectedStop)\r\n\r\n\r\n    return(\r\n\r\n        <div>\r\n                        {\r\n                            selectedStop ?\r\n                                    <>\r\n                                        <Header as='h2'>{ selectedStop.name }</Header>\r\n\r\n                                        <List divided verticalAlign='middle'>\r\n                                                {\r\n                                                    selectedStop.patterns.map(patternToListItem)\r\n                                                }\r\n                                        </List>\r\n                                        \r\n                                    </>                                \r\n                                :\r\n                                    <Search setSelectedStop={setSelectedStop} placeholder=\"Pysäkin nimi\" />\r\n                            \r\n                        }\r\n        </div>       \r\n    )   \r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) =>  ({ ...state })\r\nexport default connect(mapStateToProps, {    addPattern })(ChooseBus)","import React from 'react'\r\n\r\nimport { Menu as SemanticMenu } from 'semantic-ui-react'\r\n\r\n\r\nimport uuidv4 from 'uuid/v4'\r\n\r\nconst Menu = ({ activeItem, pages, onChoose }) => {\r\n\r\n\r\n\r\n    return(\r\n        <SemanticMenu attached='top' tabular style={{marginTop:'5%'}}>\r\n            {\r\n                pages.map(page => {\r\n                    return(\r\n                        <SemanticMenu.Item\r\n                        key={uuidv4()}\r\n                        active={activeItem === page.componentName}\r\n                        onClick={ () => onChoose(page.componentName) }\r\n                        >\r\n                            { page.name }\r\n                        </SemanticMenu.Item>\r\n                    )\r\n                })\r\n            }\r\n        </SemanticMenu>\r\n    )\r\n}\r\n\r\n\r\nexport default Menu","\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport { List, Button } from 'semantic-ui-react'\r\nimport { removePattern } from '../reducers/followedPatternsReducer'\r\n\r\nimport  uuidv4  from 'uuid/v4'\r\n\r\nconst FollowedPatternList = ({  followedPatterns, removePattern }) => {\r\n\r\n    console.log('followedPatterns',followedPatterns)\r\n\r\n    const makeListItem = pattern => {\r\n\r\n        return(\r\n            <List.Item key= { uuidv4() }>\r\n                    <List.Content  floated='right'>\r\n                        <Button negative onClick={ () => removePattern(pattern) }>Poista</Button>\r\n                    </List.Content>\r\n    \r\n                    <List.Content style={{fontSize: '150%'}}> { pattern.shortName }</List.Content>\r\n            </List.Item>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <List divided verticalAlign='middle'>\r\n                {\r\n                    followedPatterns.map(makeListItem)\r\n                }\r\n            </List>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) =>  ({ ...state })\r\nexport default connect(mapStateToProps, {  removePattern  })(FollowedPatternList)\r\n","import React, { useEffect, useState  } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { getTimetables }  from './reducers/timetableReducer'\nimport Departures     from './components/Departures'\nimport ChooseBus from './components/ChooseBus'\nimport Menu from './components/Menu'\nimport { getLocalStoragePatterns } from './utils/LocalStorage'\nimport { setPatterns } from './reducers/followedPatternsReducer'\nimport { Container, Grid } from 'semantic-ui-react'\nimport FollowedPatternList from './components/FollowedPatternList'\n\nconst App = ({ setPatterns }) => {\n\n  const [activeItem,setActiveItem] = useState('Departures')\n\n\n  useEffect(() => {\n    // Import from local storage\n    setPatterns(getLocalStoragePatterns().filter(s => s.patternId))  \n\n  },[])\n\n\n  const pages = [\n    { name: 'Aikataulut', componentName: 'Departures' }\n    ,\n    { name: 'Seurattavat bussit', componentName: 'FollowedPatternList' }\n    ,\n    { name: 'Valitse dösä', componentName: 'ChooseBus' }\n  ]\n\n  return(\n\n    <Grid columns={3}>\n      <Menu activeItem={activeItem} pages={pages} onChoose={setActiveItem} />\n      <Grid.Column width={3}>\n      </Grid.Column>\n      <Grid.Column width={12}>\n\n\n       {\n          \n        activeItem === 'ChooseBus' ? \n\n            <ChooseBus />\n\n            :\n          \n            activeItem === 'Departures' ? \n\n              <Departures/>\n              :\n              <FollowedPatternList/>\n      \n        } \n      </Grid.Column>\n      <Grid.Column width={1}>\n      </Grid.Column>\n    </Grid>\n\n  )\n\n}\n\n\n\n\nconst mapStateToProps = (state) =>  ({ ...state })\nexport default connect(mapStateToProps, {   getTimetables, setPatterns })(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { timetableReducer } from './reducers/timetableReducer'\r\nimport { followedPatternsReducer } from './reducers/followedPatternsReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n  timetables: timetableReducer,\r\n  followedPatterns: followedPatternsReducer\r\n})\r\n\r\nconst store = createStore(reducer,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>, document.getElementById('root'))\n"],"sourceRoot":""}