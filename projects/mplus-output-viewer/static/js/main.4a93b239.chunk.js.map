{"version":3,"sources":["components/Navbar.js","utils/extractOccurancesOfRegex.js","utils/extractChapters.js","utils/extractTitle.js","utils/extractNumberOfGroups.js","utils/extractResultTable.js","utils/columnsToRows.js","utils/parseOut.js","utils/utils.js","components/FileLoader.js","components/ModelResults.js","components/WholeOutput.js","App.js","index.js"],"names":["Navbar","mplusOutput","handlePageChange","LinkToGroupComparison","parsed","NumberOfGroups","Menu","Item","onClick","Grid","columns","doubling","Column","extractOccurancesOfRegex","params","regex","idx","occurances","res","exec","string","push","result","id","contentStart","index","length","start","addEnds","obj","arr","end","i","extractChapterContent","headersObj","headers","headerIdx","header","content","substring","split","extractChapters","chapters","filteringRegex","filter","h","test","extractTitle","title","c","toLowerCase","indexOf","undefined","extractNumberOfGroups","StringContainingNumberOfGroups","match","replace","ensureCellKeyCount","cell","headercount","keys","values","ExtractTableRows","group","grouptableheaders","join","tablerows","map","occ","originalTableRows","r","or","row","additionalKey","rowObj","splice","rowAsObject","TableRowsToObject","key","concat","addKeyToCell","extractResultTable","cells","headerToFind","tableheaders","alert","modelResults","chapt","flat","cellsToGroupComparison","elem","slice","columnsToRows","variables","cellsForGroupComparison","Object","reduce","variable","cellForGroupComparison","variableIndex","groupvalues","value","extractVariableValuesPerGroup","parseOut","mplusoutputstring","standardizedModelResults","groups","getOwnPropertyNames","getUniqueFromArray","FileLoader","handleFileLoad","Container","Row","centered","Button","primary","style","fontSize","Input","type","display","color","onChange","for","class","ModelResults","results","show","Header","Table","Body","Cell","WholeOutput","useState","selectedChapters","setSelectedChapters","chapterHeaders","chap","isHeaderSelected","handleCheckBoxChange","e","clickedChapter","target","innerText","chapter","width","Sticky","checked","Checkbox","label","whiteSpace","fontFamily","dangerouslySetInnerHTML","__html","chapterContentContainer","App","setMplusOutput","page","setPage","console","log","fileInput","file","files","reader","FileReader","onload","filename","name","readAsText","ReactDOM","render","document","getElementById"],"mappings":"oQA2BeA,EAvBA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,iBAC7B,GAAoB,OAAhBD,EACF,MAAO,GAIT,IAAME,EAAyBF,EAAYG,OAAOC,eAAiB,EAAI,kBAACC,EAAA,EAAKC,KAAN,CAAWC,QAAU,kBAAON,EAAiB,qBAA7C,qBAAkG,GAGzK,OACE,kBAACO,EAAA,EAAD,CAAMC,QAAS,EAAGC,UAAQ,GACxB,kBAACF,EAAA,EAAKG,OAAN,KACE,kBAACN,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,CAAYC,QAAU,kBAAON,EAAiB,iBAA9C,gBACA,kBAACI,EAAA,EAAKC,KAAN,CAAYC,QAAU,kBAAON,EAAiB,kBAA9C,iBACA,kBAACI,EAAA,EAAKC,KAAN,CAAYC,QAAU,kBAAON,EAAiB,qBAA9C,8BACEC,MCEGU,EAlBkB,SAACC,GAOhC,IALA,IAAMC,EAAQD,EAAOC,MACjBC,EAAM,EAEJC,EAAa,GACfC,EAAM,GACmC,QAArCA,EAAMH,EAAMI,KAAKL,EAAOM,UAC9BH,EAAWI,KAAK,CAAEC,OAAQJ,EAAI,GAAIK,GAAI,IAAIP,EAAKQ,aAAcN,EAAIO,MAAQP,EAAI,GAAGQ,OAAQC,MAAOT,EAAIO,QACnGT,IAGF,MAAO,CAAEC,WAAYA,EACnBG,OAAQN,EAAOM,SCTbQ,EAAU,SAACC,GAGf,IAAIC,EAAMD,EAAIZ,WACda,EAAIA,EAAIJ,OAAO,GAAGK,IAAMF,EAAIT,OAAOM,OAEnC,IAAK,IAAIM,EAAKF,EAAIJ,OAAO,EAAIM,GAAK,EAAEA,IAClCF,EAAIE,GAAGD,IAAMD,EAAKE,EAAE,GAAIL,MAAM,EAIhC,OAFAE,EAAIZ,WAAaa,EAEVD,GAIHI,EAAwB,SAACC,GAE7B,IAAIC,EAAWD,EAAWjB,WACpBG,EAASc,EAAWd,OAEpBU,EAAM,GACZ,IAAK,IAAIM,KAAaD,EAAS,CAC7B,IAAIE,EAASF,EAAQC,GACrBN,EAAIT,KAAK,CACPgB,OAAQA,EACRd,GAAIc,EAAOd,GACXe,QAASlB,EAAOmB,UAAUF,EAAOb,aAAaa,EAAON,KAAKS,MAAM,QAKpE,OADAN,EAAWjB,WAAaa,EACjBI,GAKHO,EAAkB,SAAC3B,GAIvB,IAAIqB,EAAUtB,EAAyB,CAAEO,OAAQN,EAAOM,OAAQO,MAAO,EAAGe,SAAU,GAAI3B,MAAOD,EAAOC,QAStG,OAPID,EAAO6B,iBACTR,EAAQlB,WAAakB,EAAQlB,WAAW2B,OAAO,SAACC,GAAD,OAAQ/B,EAAO6B,eAAeG,KAAKD,EAAEvB,WAGtFa,EAAUP,EAAQO,GAEHF,EAAsBE,GACrBlB,YCpDH8B,EALM,SAACL,GACpB,IAAMM,EAAQN,EAAS,GAAGJ,QAAQM,OAAO,SAACK,GAAD,OAAOA,EAAEC,cAAcC,QAAQ,WAAW,IACnF,YAAiBC,IAAVJ,OAAsBI,EAAYJ,EAAM,ICIlCK,EANe,SAACjC,GAC7B,IACMkC,EAAkClC,EAAOmC,MADlB,oCAE7B,OAA2C,OAApCD,OAA2CF,EAAsE,EAA1DE,EAA+B,GAAGE,QAAQ,UAAU,KCI9GC,EAAqB,SAAC,GAE1B,IAFqD,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAE3BD,EAAKE,KAAKlC,OAASgC,EAAKG,OAAOnC,OAASiC,GAC7CD,EAAKG,OAAOxC,KAAK,IAEnB,OAAOqC,GAiCHI,EAAmB,SAACC,GAGxB,IAAIC,EAAoBnD,EAAyB,CAAEO,OAAQ2C,EAAMzB,QAAQ2B,KAAK,MAAOtC,MAAO,EAAGe,SAAU,GAAI3B,MAAO,oBACpHiD,EAAoBpC,EAAQoC,GAE5B,IAEIE,EAFcjC,EAAsB+B,GAEZ/C,WAAWkD,IAAI,SAACC,GAAD,OApCrB,SAACnD,GAEvB,IAMIoD,EAAqBpD,EAAWqB,QAAQ6B,IAAI,SAACG,GAAD,OAA8BA,EALtD9B,MAAM,oBAAoBI,OAAO,SAACc,GAAD,MAAU,WAAWZ,KAAKY,OAKDd,OAAO,SAAC0B,GAAD,OAAOA,EAAE5C,OAAO,IAazG,OADkB2C,EAAkBF,IAAI,SAACI,GAAD,OARpB,SAACC,EAAIC,GACvB,IAAMC,EAAS,GAIf,OAHAA,EAAOd,KAAO,CAAEa,EAAeD,EAAI,IACnCA,EAAIG,OAAO,EAAE,GACbD,EAAOb,OAASW,EACTE,EAGuCE,CAAYL,EAAGtD,EAAWoB,OAAOf,UAgB7BuD,CAAkBT,KAStE,OAFAF,EAAYA,EAAUC,IAAI,SAACK,GAAD,OAASA,EAAIL,IAAI,SAACT,GAAD,OAJtB,SAACA,EAAKoB,GAEzB,OADApB,EAAKE,KAAS,CAACkB,GAAKC,OAAOrB,EAAKE,MACzBF,EAE4CsB,CAAatB,EAAKK,EAAM1B,OAAOf,aA+CvE2D,EAxCY,SAACnE,GAE1B,IASIoE,EATExC,EAAW5B,EAAO4B,SAClByC,EAAerE,EAAOqE,aACtBC,EAAetE,EAAOsE,aACtB/E,EAAiBS,EAAOT,oBAEb+C,IAAbV,EAAsC,OAAbA,GAC3B2C,MAAM,+CAMR,IAAIC,EAAe5C,EAASE,OAAO,SAAC2C,GAAD,OAAWA,EAAMlD,OAAOf,SAAW6D,IAAc,GAGpF,QAAuB/B,IAAnB/C,EAA+BA,EAAe,EAAI,CASpD6E,GADAA,EAHezC,EAAgB,CAAErB,OAAQkE,EAAahD,QAAQ2B,KAAK,MAAOlD,MADrD,qBAGSoD,IAAI,SAACJ,GAAD,OAAWD,EAAiBC,KACvCI,IAAI,SAACrC,GAAD,OAASA,EAAI0D,SAAQA,QAClCrB,IAAI,SAACT,GAAD,OAAUD,EAAmB,CAAEC,KAAMA,EAAMC,YAAayB,EAAa1D,eAGlF,CAKLwD,GADAA,EADgBpB,EAAiBwB,GACfnB,IAAI,SAACrC,GAAD,OAASA,EAAI0D,SAAQA,QAC7BrB,IAAI,SAACT,GAAD,OAAUD,EAAmB,CAAEC,KAAMA,EAAMC,YAAayB,EAAa1D,WAEzF,OAAOwD,GCnGHO,EAAyB,SAAC5D,EAAI6D,GAElC,IAAIZ,EAAMY,EAAK9B,KAAK+B,MAAM,EAAE,GAAG1B,KAAK,IAuBpC,YArBeb,IAAXvB,EAAIiD,GAENjD,EAAIiD,GAAO,CACTlB,KAAM8B,EAAK9B,KAAK+B,MAAM,EAAE,GACxB9B,OAAQ,CACN,CACEE,MAAO2B,EAAK9B,KAAK,GACjBC,OAAQ6B,EAAK7B,UAOnBhC,EAAIiD,GAAKjB,OAAOxC,KAAK,CACnB0C,MAAO2B,EAAK9B,KAAK,GACjBC,OAAQ6B,EAAK7B,SAKVhC,GAsBM+D,EAhBO,SAAC,GAA0B,IAAxBV,EAAuB,EAAvBA,MAAOW,EAAgB,EAAhBA,UAE1BC,EAA2BC,OAAOlC,OAAQqB,EAAMc,OAAOP,EAAuB,KAUlF,OAJAK,EAA0BD,EAAU1B,IAAI,SAAC8B,EAASjF,GAChD,OAAO8E,EAAwB3B,IAAI,SAACT,GAAD,OALC,SAACwC,EAAuBD,EAASE,GACrE,OAAOD,EAAuBrC,OAAOM,IAAI,SAACiC,GAAmB,MAAO,CAAExC,KAAMsC,EAAuBtC,KAAKmB,OAAOkB,GAAUlB,OAAOqB,EAAYrC,OAASsC,MAAOD,EAAYvC,OAAOsC,MAIlIG,CAA8B5C,EAAKuC,EAASjF,OACxFwE,QAE4BA,QCOlBe,EA9CE,SAACC,GAEhB,IAAMpG,EAAS,GAIfA,EAAOsC,SAAYD,EAAgB,CAAErB,OAAQoF,EAAmBzF,MAD1C,6BACgE4B,eAAgB,oBACtGvC,EAAO4C,MAAYD,EAAa3C,EAAOsC,UACvCtC,EAAOC,eAAiBgD,EAAsBmD,GAG9C,IAAMX,EAAY,CAAC,WAAW,OAAO,WAAW,WAC1CT,EAAe,CAAC,UAAU,UAAU,WAAWL,OAAOc,GAExDxD,EAAS,gBAET6C,EAAQD,EACV,CAAEvC,SAAUtC,EAAOsC,SAAUyC,aAAc9C,EAAO+C,aAAcA,EAAc/E,eAAgBD,EAAOC,iBA0BvG,OAvBAD,EAAOkF,aAAe,CACpBjD,OAAQA,EACR6C,MAAOU,EAAc,CAAEV,MAAOA,EAAOW,UAAWA,KAKlDxD,EAAS,6BAET6C,EAAQD,EACN,CAAEvC,SAAUtC,EAAOsC,SAAUyC,aAAc9C,EAAO+C,aAAcA,EAAc/E,eAAgBD,EAAOC,iBAGvGD,EAAOqG,yBAA2B,CAChCpE,OAAQA,EACR6C,MAAOU,EAAc,CAAEV,MAAOA,EAAOW,UAAWA,KAIlDzF,EAAOsG,OC/CkB,SAAC5E,GAE1B,IAIMD,EAAQC,EAAIkE,OAJV,SAACnE,EAAI6D,GAEX,OADA7D,EAAI6D,GAAQ,EACL7D,GAEkB,IAE3B,OAAOkE,OAAOY,oBAAoB9E,GDuCjB+E,CAAoBxG,EAAOkF,aAAaJ,MAAMf,IAAI,SAAClB,GAAD,OAAOA,EAAEc,SAIrE3D,G,kBEZMyG,EApCI,SAAC,GAAuC,IAAnCC,EAAkC,EAAlCA,eACtB,GAAoB,OADoC,EAAlB7G,YAEpC,MAAO,GAcT,OACE,kBAAC8G,EAAA,EAAD,KACE,kBAACtG,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKuG,IAAN,MACA,kBAACvG,EAAA,EAAKuG,IAAN,MACA,kBAACvG,EAAA,EAAKuG,IAAN,MACA,kBAACvG,EAAA,EAAKuG,IAAN,MACA,kBAACvG,EAAA,EAAKuG,IAAN,CAAUC,UAAQ,GAChB,kBAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,MAdJ,CAClBC,SAAU,SAaJ,IAAqC,kBAACC,EAAA,EAAD,CAAO/F,GAAG,cAAcgG,KAAK,OAAOH,MAnB9D,CACjBI,QAAS,OACTC,MAAO,OAiB2FC,SAAWZ,IACrG,2BAAOa,IAAI,cAAcC,MAAM,sBAA/B,0B,kBCGGC,EA5BM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAE/B,GAAiB,OAAZD,IAAqBC,EACxB,MAAO,GAET,IAAM7C,EAAQ4C,EAAQ5C,MAStB,OACE,kBAAC6B,EAAA,EAAD,KACE,kBAACiB,EAAA,EAAD,KAAUF,EAAQzF,QAClB,kBAAC4F,EAAA,EAAD,KACE,kBAACA,EAAA,EAAMC,KAAP,KACIhD,EAAMf,IAbO,SAACT,GACtB,OACE,kBAACuE,EAAA,EAAMjB,IAAP,KACGtD,EAAKE,KAAKmB,OAAOrB,EAAK2C,OAAOlC,IAAI,SAACW,GAAD,OAAS,kBAACmD,EAAA,EAAME,KAAP,KAAcrD,Y,SCsGlDsD,EA3GK,SAAC,GAA2B,IAAzBnI,EAAwB,EAAxBA,YAAa8H,EAAW,EAAXA,KAAW,EAEKM,mBAAS,IAFd,mBAErCC,EAFqC,KAEnBC,EAFmB,KAK7C,GAAoB,OAAhBtI,IAAyB8H,EAC3B,MAAO,GAGT,IAIMS,EAHmB,OAAhBvI,EAAuB,GAAKA,EAAYG,OAAOsC,SAASyB,IAAI,SAAAsE,GAAI,OAAMA,EAAKpG,OAAOf,SAKrFoB,EAAWzC,EAAYG,OAAOsC,SAa9BgG,EAAmB,SAACrG,GAAD,OAAYiG,EAAiBnF,QAAQd,IAAS,GAIjEsG,EAAuB,SAACC,GAE5B,IAjB8BvG,EAiBxBwG,EAAiBD,EAAEE,OAAOC,UAChCR,EAhBMG,EAFwBrG,EAkBawG,GAdlCP,EAAiB1F,OAAO,SAAAoG,GAAO,OAAIA,IAAY3G,IAGjDiG,EAAiBvD,OAAO1C,KAsDjC,OAEE,kBAAC5B,EAAA,EAAD,CAAMC,QAAS,EAAGC,UAAQ,GACxB,kBAACF,EAAA,EAAKG,OAAN,CAAaqI,MAAO,GAClB,kBAACxI,EAAA,EAAKuG,IAAN,KACE,kBAACE,EAAA,EAAD,CAAQC,SAAO,EAAC3G,QAjBA,WAEjB8H,EAAiB5G,SAAW8G,EAAe9G,OAE9C6G,EAAoBC,GAIpBD,EAAoB,MAS+BD,EAAiB5G,SAAW8G,EAAe9G,OAAS,aAAe,iBAEpH,kBAACjB,EAAA,EAAKuG,IAAN,KACE,kBAACkC,EAAA,EAAD,KAEIV,EAAerE,IAjDV,SAAC9B,GAEhB,IAAM8G,EAAUT,EAAiBrG,GAEjC,OACE,kBAAC5B,EAAA,EAAKuG,IAAN,CAAUlC,IAAM,YAAYzC,GAAQ,kBAAC+G,EAAA,EAAD,CAAUC,MAAQhH,EAAS8G,QAAWA,EAASzB,SAAUiB,UAiD7F,kBAAClI,EAAA,EAAKG,OAAN,CAAaqI,MAAO,IAEhBvG,EAASyB,IAAI,SAACsE,EAAKzH,GAAN,OA/CW,SAACgI,EAAQhI,GAEvC,IAAMoG,EAAQ,CACZkC,WAAY,WACZC,WAAY,WACZ/B,QAASkB,EAAkBM,EAAQ3G,QAAW,GAAK,QAErD,OACE,6BACE,8BACA,kBAAC2F,EAAA,EAAD,CAAQZ,MAAQA,GAAU4B,EAAQ3G,QAClC,yBAAKyC,IAAM,WAAW9D,EAAMoG,MAAQA,EAASoC,wBAAyB,CAAEC,OAAQT,EAAQ1G,YAoC3DoH,CAAyB,CAAEpH,QAASmG,EAAKnG,QAAQ2B,KAAK,MAAO5B,OAAQoG,EAAKpG,OAAOf,QAASN,QC3BhH2I,EA3DH,WAAO,IAAD,EAEwBtB,mBAAS,MAFjC,mBAERpI,EAFQ,KAEK2J,EAFL,OAGUvB,mBAAS,eAHnB,mBAGRwB,EAHQ,KAGFC,EAHE,KAiChB,OAHAC,QAAQC,IAAI,OAAQH,GACpBE,QAAQC,IAAI,gBAAiB/J,GAG3B,kBAAC8G,EAAA,EAAD,KACE,kBAAC,EAAD,CAAY9G,YAAgBA,EAAc6G,eA1BvB,SAAC8B,GACtB,IAAMqB,EAAYrB,EAAEE,OACdoB,EAAOD,EAAUE,MAAM,GACvBC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WACdV,EACE,CACExI,OAAQgJ,EAAO9I,OACdiJ,SAAUN,EAAUE,MAAM,GAAGK,KAC7BpK,OAAQmG,EAAS6D,EAAO9I,WAI/B8I,EAAOK,WAAWP,EAAK,cAarB,kBAAChB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAQjJ,YAAgBA,EAAcC,iBAXnB,SAAC2J,GACxBC,EAAQD,OAYN,kBAAC,EAAD,CAAc9B,KAAkB,gBAAT8B,EAA6B5J,YAAgBA,IACpE,kBAAC,EAAD,CAAc8H,KAAkB,iBAAT8B,EAA6B/B,QAA4B,OAAhB7H,EAAuBA,EAAYG,OAAOkF,aAAe,OACzH,kBAAC,EAAD,CAAcyC,KAAkB,oBAAT8B,EAA6B/B,QAA4B,OAAhB7H,EAAuBA,EAAYG,OAAOqG,yBAA2B,SCpD3IiE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4a93b239.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Grid, Menu, Header, Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = ({ mplusOutput, handlePageChange }) => {\r\n  if (mplusOutput === null) {\r\n    return('')\r\n  }\r\n\r\n\r\n  const LinkToGroupComparison =  mplusOutput.parsed.NumberOfGroups > 1 ? <Menu.Item onClick={ () =>  handlePageChange('groupcomparison') }>>Group comparison</Menu.Item> : ''\r\n\r\n\r\n  return(\r\n    <Grid columns={1} doubling>\r\n      <Grid.Column>\r\n        <Menu>\r\n          <Menu.Item  onClick={ () =>  handlePageChange('wholeoutput') }>Whole output</Menu.Item>\r\n          <Menu.Item  onClick={ () =>  handlePageChange('modelresults') }>Model results</Menu.Item>\r\n          <Menu.Item  onClick={ () =>  handlePageChange('stdmodelresults') }>Standardized model results</Menu.Item>\r\n          { LinkToGroupComparison }\r\n        </Menu>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n\r\n}\r\nexport default Navbar","\r\n\r\n\r\n// Gets hits of given regex (location)\r\nconst extractOccurancesOfRegex = (params) => {\r\n\r\n  const regex = params.regex\r\n  let idx = 0\r\n\r\n  const occurances = []\r\n  let res = ''\r\n  while ((res = regex.exec(params.string)) !== null) {\r\n    occurances.push({ result: res[0], id: 'C'+idx, contentStart: res.index + res[0].length, start: res.index  })\r\n    idx++\r\n  }\r\n\r\n  return { occurances: occurances,\r\n    string: params.string\r\n  }\r\n}\r\n\r\n\r\nexport default extractOccurancesOfRegex","\r\n\r\nimport extractOccurancesOfRegex from './extractOccurancesOfRegex'\r\n\r\n\r\n\r\n\r\n// Adds the end of string to hits gotten by extractOccurencesOfRegec\r\nconst addEnds = (obj) => {\r\n\r\n\r\n  let arr = obj.occurances\r\n  arr[arr.length-1].end = obj.string.length\r\n\r\n  for (let i = (arr.length-2); i >= 0;i--) {\r\n    arr[i].end = arr[(i+1)].start-1\r\n  }\r\n  obj.occurances = arr\r\n\r\n  return obj\r\n}\r\n\r\n// Gets strings between headers (extracted through extractOccurencesOfRegec)\r\nconst extractChapterContent = (headersObj) => {\r\n\r\n  let headers =  headersObj.occurances\r\n  const string = headersObj.string\r\n\r\n  const arr = []\r\n  for (let headerIdx in headers) {\r\n    let header = headers[headerIdx]\r\n    arr.push({\r\n      header: header,\r\n      id: header.id,\r\n      content: string.substring(header.contentStart,header.end).split('\\n')\r\n    })\r\n  }\r\n\r\n  headersObj.occurances = arr\r\n  return(headersObj)\r\n}\r\n\r\n// Brings them all together\r\n\r\nconst extractChapters = (params) => {\r\n\r\n\r\n\r\n  let headers = extractOccurancesOfRegex({ string: params.string, start: 0, chapters: [], regex: params.regex })\r\n\r\n  if (params.filteringRegex) {\r\n    headers.occurances = headers.occurances.filter((h) => !params.filteringRegex.test(h.result))\r\n  }\r\n\r\n  headers = addEnds(headers)\r\n\r\n  let chapters = extractChapterContent(headers)\r\n  return chapters.occurances\r\n\r\n}\r\n\r\nexport { extractChapters, extractChapterContent, addEnds }","const extractTitle = (chapters) => {\r\n  const title = chapters[0].content.filter((c) => c.toLowerCase().indexOf('title:')>-1)\r\n  return title === undefined ? undefined : title[0]\r\n}\r\n\r\nexport default extractTitle","const extractNumberOfGroups = (string) => {\r\n  const RegExpNumberOfGroups = /(Number of groups[ ]+[0-9]{1,2})/\r\n  const StringContainingNumberOfGroups =  string.match(RegExpNumberOfGroups)\r\n  return StringContainingNumberOfGroups ===  null ? undefined : StringContainingNumberOfGroups[0].replace(/[^0-9]/g,'') * 1\r\n}\r\n\r\nexport default extractNumberOfGroups","\r\nimport { extractChapters, addEnds, extractChapterContent } from './extractChapters'\r\nimport extractOccurancesOfRegex from './extractOccurancesOfRegex'\r\n\r\n\r\n// Ensure that each cell has as many keys as there are headers in the table\r\n\r\nconst ensureCellKeyCount = ({ cell, headercount }) => {\r\n\r\n  while (cell.keys.length + cell.values.length < headercount) {\r\n    cell.values.push('')\r\n  }\r\n  return cell\r\n}\r\n\r\n// Transform plain text table rows to JS-objects\r\n\r\nvar TableRowsToObject = (occurances) => {\r\n\r\n  const getTableCellsFromRow = (rowString) => {\r\n    let cells = rowString.split(/([A-Z_\\-0-9.$]+)/).filter((cell) => /[A-Z0-9]/.test(cell)    )\r\n    return(cells)\r\n  }\r\n\r\n\r\n  let originalTableRows =  occurances.content.map((r) =>   getTableCellsFromRow(r)).filter((r) => r.length>0)\r\n\r\n\r\n\r\n  const rowAsObject = (row,additionalKey) => {\r\n    const rowObj = {}\r\n    rowObj.keys = [ additionalKey, row[0] ]\r\n    row.splice(0,1)\r\n    rowObj.values = row\r\n    return rowObj\r\n  }\r\n\r\n  const tableRows = originalTableRows.map((or) => rowAsObject(or,occurances.header.result))\r\n  return(tableRows)\r\n}\r\n\r\n\r\n\r\n\r\n// Extract rows of table\r\nconst ExtractTableRows = (group) => {\r\n\r\n  // Group specific actions\r\n  let grouptableheaders = extractOccurancesOfRegex({ string: group.content.join('\\n'), start: 0, chapters: [], regex: /(.+[A-Za-z]$)/gm })\r\n  grouptableheaders = addEnds(grouptableheaders)\r\n\r\n  let grouptables = extractChapterContent(grouptableheaders)\r\n\r\n  let tablerows = grouptables.occurances.map((occ) => TableRowsToObject(occ))\r\n\r\n  // Add group as key to cells\r\n  const addKeyToCell = (cell,key) => {\r\n    cell.keys  =  [key].concat(cell.keys)\r\n    return cell\r\n  }\r\n  tablerows = tablerows.map((row) => row.map((cell) => addKeyToCell(cell,group.header.result)))\r\n\r\n  return(tablerows)\r\n}\r\n\r\n\r\n\r\nconst extractResultTable = (params) => {\r\n\r\n  const chapters = params.chapters\r\n  const headerToFind = params.headerToFind\r\n  const tableheaders = params.tableheaders\r\n  const NumberOfGroups = params.NumberOfGroups\r\n\r\n  if (chapters === undefined | chapters === null) {\r\n    alert('No output loaded to get model results from!')\r\n  }\r\n\r\n  let cells\r\n\r\n  // Find the chapter that has the \"headerToFind\" (eg. MODEL RESULTS)\r\n  let modelResults = chapters.filter((chapt) => chapt.header.result === headerToFind)[0]\r\n\r\n  // If output has groups:\r\n  if (NumberOfGroups !== undefined & NumberOfGroups>1)  {\r\n\r\n\r\n    // Find group specific parts of the output\r\n    const RegExpGroup =  /Group [A-Z_]+$/gm\r\n    const groups = extractChapters({ string: modelResults.content.join('\\n'), regex: RegExpGroup })\r\n\r\n    const grouptablerows = groups.map((group) => ExtractTableRows(group))\r\n    cells = grouptablerows.map((arr) => arr.flat()).flat()\r\n    cells = cells.map((cell) => ensureCellKeyCount({ cell: cell, headercount: tableheaders.length }))\r\n\r\n  // If output does not have gtroups\r\n  } else {\r\n\r\n    // This function works as it similar to number of groups = 1\r\n    let tablerows = ExtractTableRows(modelResults)\r\n    cells = tablerows.map((arr) => arr.flat()).flat()\r\n    cells = cells.map((cell) => ensureCellKeyCount({ cell: cell, headercount: tableheaders.length }))\r\n  }\r\n  return(cells)\r\n\r\n}\r\n\r\nexport default extractResultTable","\r\n\r\n\r\n\r\nconst cellsToGroupComparison = (obj,elem) => {\r\n\r\n  let key = elem.keys.slice(1,3).join('') // Defines the 'key' to distinguish variables\r\n\r\n  if (obj[key]===undefined) {\r\n\r\n    obj[key] = {\r\n      keys: elem.keys.slice(1,3),\r\n      values: [\r\n        {\r\n          group: elem.keys[0],\r\n          values: elem.values\r\n        }\r\n      ]\r\n    }\r\n\r\n  } else {\r\n\r\n    obj[key].values.push({\r\n      group: elem.keys[0],\r\n      values: elem.values\r\n\r\n    })\r\n  }\r\n\r\n  return obj\r\n}\r\n\r\n\r\n\r\n\r\nconst columnsToRows = ({ cells, variables }) => {\r\n\r\n  let cellsForGroupComparison =  Object.values( cells.reduce(cellsToGroupComparison,{}) )\r\n\r\n  const extractVariableValuesPerGroup = (cellForGroupComparison,variable,variableIndex) => {\r\n    return cellForGroupComparison.values.map((groupvalues) =>  { return({ keys: cellForGroupComparison.keys.concat(variable).concat(groupvalues.group),  value: groupvalues.values[variableIndex] }) } )\r\n  }\r\n\r\n  cellsForGroupComparison = variables.map((variable,idx) => {\r\n    return cellsForGroupComparison.map((cell) => extractVariableValuesPerGroup(cell,variable,idx))\r\n  }).flat()\r\n\r\n  return cellsForGroupComparison.flat()\r\n}\r\n\r\n\r\nexport default columnsToRows\r\n","\r\nimport { extractChapters } from './extractChapters'\r\nimport extractTitle    from './extractTitle'\r\nimport extractNumberOfGroups from './extractNumberOfGroups'\r\nimport extractResultTable from './extractResultTable'\r\nimport columnsToRows from './columnsToRows'\r\nimport { getUniqueFromArray } from './utils'\r\n\r\nconst parseOut = (mplusoutputstring) => {\r\n\r\n  const parsed = {}\r\n\r\n  // Extract main chapters\r\n  const RegExpChapter = /(^[A-Z][A-Z 0-9]+[A-Z]$)/gm\r\n  parsed.chapters =  extractChapters({ string: mplusoutputstring, regex: RegExpChapter, filteringRegex: / (BY|WITH|ON)$/m  })\r\n  parsed.title    =  extractTitle(parsed.chapters)\r\n  parsed.NumberOfGroups = extractNumberOfGroups(mplusoutputstring)\r\n\r\n  // Extract model results\r\n  const variables = ['Estimate','S.E.','Est/S.E.','P-Value']\r\n  const tableheaders = ['Column1','Column2','Column3'].concat(variables)\r\n\r\n  let header = 'MODEL RESULTS'\r\n\r\n  let cells = extractResultTable(\r\n    { chapters: parsed.chapters, headerToFind: header,tableheaders: tableheaders, NumberOfGroups: parsed.NumberOfGroups  }\r\n  )\r\n\r\n  parsed.modelResults = {\r\n    header: header,\r\n    cells: columnsToRows({ cells: cells, variables: variables }) // Pivot columns to rows\r\n  }\r\n\r\n  // Extract standardized model results\r\n\r\n  header = 'STANDARDIZED MODEL RESULTS'\r\n\r\n  cells = extractResultTable(\r\n    { chapters: parsed.chapters, headerToFind: header,tableheaders: tableheaders, NumberOfGroups: parsed.NumberOfGroups  }\r\n  )\r\n\r\n  parsed.standardizedModelResults = {\r\n    header: header,\r\n    cells: columnsToRows({ cells: cells, variables: variables }) // Pivot columns to rows\r\n  }\r\n\r\n  // Get group names from model results\r\n  parsed.groups =  getUniqueFromArray( parsed.modelResults.cells.map((c) => c.group ) )\r\n\r\n\r\n\r\n  return parsed\r\n}\r\n\r\nexport default parseOut","const getUniqueFromArray = (arr) => {\r\n\r\n  let f = (obj,elem) => {\r\n    obj[elem] = 1\r\n    return obj\r\n  }\r\n  const obj =   arr.reduce(f,{})\r\n\r\n  return Object.getOwnPropertyNames(obj)\r\n}\r\n\r\n\r\nexport { getUniqueFromArray }","import React from 'react'\r\nimport {  Button, Input, Grid, Container } from 'semantic-ui-react'\r\n\r\nconst FileLoader = (  { handleFileLoad, mplusOutput }) => {\r\n  if (mplusOutput !== null) {\r\n    return('')\r\n  }\r\n\r\n  const inputStyle = {\r\n    display: 'none',\r\n    color: 'red'\r\n  }\r\n\r\n  const buttonStyle = {\r\n    fontSize: '200%',\r\n\r\n  }\r\n\r\n\r\n  return(\r\n    <Container>\r\n      <Grid>\r\n        <Grid.Row></Grid.Row>\r\n        <Grid.Row></Grid.Row>\r\n        <Grid.Row></Grid.Row>\r\n        <Grid.Row></Grid.Row>\r\n        <Grid.Row centered>\r\n          <Button primary style={buttonStyle}> <Input id=\"file-upload\" type=\"file\" style={inputStyle} onChange={ handleFileLoad }></Input>\r\n            <label for=\"file-upload\" class=\"custom-file-upload\">Upload .out -file</label>\r\n          </Button>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default FileLoader","import React from 'react'\r\nimport { Container, Header, Table } from 'semantic-ui-react'\r\n\r\nconst ModelResults = ({ results, show }) => {\r\n\r\n  if ( results === null || !show ) {\r\n    return('')\r\n  }\r\n  const cells = results.cells\r\n  const cellToTableRow = (cell) => {\r\n    return(\r\n      <Table.Row>\r\n        {cell.keys.concat(cell.value).map((key) => <Table.Cell>{ key }</Table.Cell>)}\r\n      </Table.Row>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <Container>\r\n      <Header>{ results.header }</Header>\r\n      <Table>\r\n        <Table.Body>\r\n          { cells.map(cellToTableRow) }\r\n        </Table.Body>\r\n      </Table>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\nexport default ModelResults","import React,{ useState, useEffect } from 'react'\r\n\r\nimport { Grid, Checkbox, Sticky, Header, Button } from 'semantic-ui-react'\r\n\r\n\r\n\r\n\r\nconst WholeOutput = ({ mplusOutput, show }) => {\r\n\r\n  const [ selectedChapters, setSelectedChapters ] = useState([])\r\n\r\n\r\n  if (mplusOutput === null || !show ) {\r\n    return('')\r\n  }\r\n\r\n  const getChapterHeaders = () => {\r\n    return mplusOutput === null ? [] : mplusOutput.parsed.chapters.map(chap =>   chap.header.result  )\r\n  }\r\n\r\n  const chapterHeaders = getChapterHeaders()\r\n\r\n  const chapters = mplusOutput.parsed.chapters\r\n\r\n  const toggleChapterSelection = (header) => {\r\n\r\n    if (  isHeaderSelected(header)  ) {\r\n      // Included in selected chapters -> remove it\r\n      return selectedChapters.filter(chapter => chapter !== header)\r\n    }\r\n    // Not included in selected chapters -> add it\r\n    return selectedChapters.concat(header)\r\n\r\n  }\r\n\r\n  const isHeaderSelected = (header) => selectedChapters.indexOf(header)>-1\r\n\r\n  // Function handle checkbox changes\r\n\r\n  const handleCheckBoxChange = (e) => {\r\n\r\n    const clickedChapter = e.target.innerText\r\n    setSelectedChapters(toggleChapterSelection(clickedChapter))\r\n  }\r\n\r\n\r\n  const checkBox = (header) =>  {\r\n\r\n    const checked = isHeaderSelected(header)\r\n\r\n    return(\r\n      <Grid.Row key={ 'checkbox_'+header}><Checkbox label={ header } checked = {checked} onChange={handleCheckBoxChange} /></Grid.Row>\r\n    )\r\n  }\r\n\r\n  const chapterContentContainer = (chapter,idx) => {\r\n\r\n    const style = {\r\n      whiteSpace: 'pre-wrap',\r\n      fontFamily: 'Consolas',\r\n      display: isHeaderSelected( chapter.header ) ? '' : 'none'\r\n    }\r\n    return(\r\n      <div>\r\n        <div></div>\r\n        <Header style={ style }>{ chapter.header }</Header>\r\n        <div key={ 'chapter_'+idx } style={ style }  dangerouslySetInnerHTML={{ __html: chapter.content }} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  // (De-)select all\r\n  const toggleSelectAll = () => {\r\n\r\n    if ( selectedChapters.length !== chapterHeaders.length) {\r\n\r\n      setSelectedChapters(chapterHeaders)\r\n\r\n    } else {\r\n\r\n      setSelectedChapters([])\r\n    }\r\n  }\r\n\r\n  return(\r\n\r\n    <Grid columns={2} doubling>     \r\n      <Grid.Column width={4}>\r\n        <Grid.Row>\r\n          <Button primary onClick={ toggleSelectAll }>{  selectedChapters.length !== chapterHeaders.length ? 'SELECT ALL' : 'DESELECT ALL' }</Button>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Sticky>\r\n            {\r\n              chapterHeaders.map(checkBox)\r\n            }\r\n          </Sticky>\r\n        </Grid.Row>\r\n      </Grid.Column>\r\n      <Grid.Column width={12}>\r\n        {\r\n          chapters.map((chap,idx) => chapterContentContainer( { content: chap.content.join('\\n'), header: chap.header.result },idx) )\r\n        }\r\n      </Grid.Column>\r\n\r\n    </Grid>\r\n\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default WholeOutput","import React, { useState, useEffect } from 'react'\nimport { Container, Sticky } from 'semantic-ui-react'\nimport Navbar from './components/Navbar'\n//import dummydata from './dummydata/dummy.js'\n\nimport {\n  BrowserRouter as Router,\n  Route, Link, Redirect, withRouter\n} from 'react-router-dom'\n\nimport parseOut from './utils/parseOut'\nimport FileLoader from './components/FileLoader'\nimport ModelResults from './components/ModelResults'\nimport WholeOutput from './components/WholeOutput'\n\n\nconst App = () => {\n\n  const [ mplusOutput, setMplusOutput ] = useState(null)\n  const [ page, setPage ] = useState('wholeoutput')\n\n\n  // useEffect(() => { setMplusOutput({ filename: 'dummydata', string: dummydata.raw,parsed: parseOut(dummydata.raw) })  }, [])\n\n\n  const handleFileLoad = (e) => {\n    const fileInput = e.target\n    const file = fileInput.files[0]\n    const reader = new FileReader()\n\n    reader.onload = () =>  {\n      setMplusOutput(\n        {\n          string: reader.result\n          ,filename: fileInput.files[0].name\n          ,parsed: parseOut(reader.result)\n        })\n    }\n\n    reader.readAsText(file,'ISO-881')\n  }\n\n  const handlePageChange = (page) => {\n    setPage(page)\n  }\n\n  console.log('page', page)\n  console.log('mplusOutput: ', mplusOutput)\n\n  return (\n    <Container>\n      <FileLoader mplusOutput = { mplusOutput } handleFileLoad={handleFileLoad}/>\n      <Sticky>\n        <Navbar mplusOutput = { mplusOutput } handlePageChange = { handlePageChange }/>\n      </Sticky>\n      <WholeOutput  show = { page === 'wholeoutput' }     mplusOutput = { mplusOutput } />\n      <ModelResults show = { page === 'modelresults' }    results = { mplusOutput !== null ? mplusOutput.parsed.modelResults : null } />\n      <ModelResults show = { page === 'stdmodelresults' } results = { mplusOutput !== null ? mplusOutput.parsed.standardizedModelResults : null } />\n    </Container>\n  )\n  /*\n  return (\n    <Container>\n      <Router>\n        <FileLoader mplusOutput = { mplusOutput } handleFileLoad={handleFileLoad}/>\n        <Sticky>\n          <Navbar mplusOutput = { mplusOutput }/>\n        </Sticky>\n        <Route path=\"/wholeoutput\" render={() => <WholeOutput mplusOutput={mplusOutput} />} />\n        <Route path=\"/modelresults\" render={() => <ModelResults results = { mplusOutput !== null ? mplusOutput.parsed.modelResults : null } />} />\n        <Route path=\"/standardizedmodelresults\" render={() => <ModelResults results = { mplusOutput !== null ? mplusOutput.parsed.standardizedModelResults : null } />} />\n      </Router>\n    </Container>\n  )*/\n}\nexport default App\n","\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport React from 'react'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}